letters = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
points = [1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 4, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10]

# Combine the two lists
letter_to_points = {key:value for key, value in zip(letters, points)}

# Add blank space to game with value of 0
letter_to_points[""] = 0


# Returns how many points specified word is worth
def score_word(word):
  point_total = 0
  for char in word:
    point_total += letter_to_points.get(char, 0)
  return point_total

# Test score_word function
brownie_points = score_word("BROWNIE")
#print(brownie_points)


# Create dictionary of players with each word they have played
player_to_words = {
    "player1": ["BLUE", "TENNIS", "EXIT"],
    "wordNerd": ["EARTH", "EYES", "MACHINE"],
    "Lexi Con": ["ERASER", "BELLY", "HUSKY"],
    "Prof Reader": ["ZAP", "COMA", "PERIOD"]
}

# Create blank player points dictionary
player_to_points = {}

# Loop adds points for each word to player value
for player, words in player_to_words.items():
  player_points = 0
  for word in words:
    player_points += score_word(word)

  player_to_points[player] = player_points


# Shows dictionary of players and their associated points 
print(player_to_points)


# THINGS TO DO-
#-------------------------------------------------------------------------------------
# play_word() — a function that would take in a player and a word, and add that word to the list of words they’ve played

# update_point_totals() — turn nested loops into a function that you can call any time a word is played

# make letter_to_points dictionary able to handle lowercase inputs
